<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_dec_castle_gate</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-4000</depth>
  <persistent>0</persistent>
  <parentName>obj_solidify_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 7;
state = "closed";
moving_speed = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == "opening")
{
    if (image_index &gt; 0)
    {
        image_index -= 1;
        alarm[1] = moving_speed;
    }
    else
    {
        state = "open";
    }
}
else if (state == "closing")
{
    if (image_index &lt; 7)
    {
        if (instance_exists(obj_player))
        {
            if (distance_to_object(obj_player) &gt; 2)
            {
                image_index += 1;
            }
            else if (image_index &gt; 3)
            {
                image_index += 1;
            }
        }
        alarm[1] = moving_speed;
    }
    else
    {
        state = "closed";
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(obj_use))
{
    if (distance_to_object(obj_use) == 0)
    {
        if (state == "closed")
        {
            state = "opening";
            alarm[1] = moving_speed; 
        }
        else if (state == "open")
        {
            state = "closing";
            alarm[1] = moving_speed;    
        }
        with (obj_use) instance_destroy();
    }
}
else if (state == "open")
{
    if (instance_exists(obj_player))
    {
        if (distance_to_object(obj_player) &gt; 100)
        {
            state = "closing";
            alarm[1] = moving_speed;   
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
