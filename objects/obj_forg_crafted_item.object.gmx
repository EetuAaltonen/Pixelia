<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5002</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>recipe_check = false; //Start checking recipes
recipe_exists = false; //Check if recipe is exists
visible = false;
sprite_index = spr_grass; //Default
image_speed = 0;

//Save to inventory
type_id = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check forge slots
if (global.forg_slot_1 == true ||
    global.forg_slot_2 == true ||
    global.forg_slot_3 == true)
{
    visible = true;
    recipe_check = true;   
}
else
{
    visible = false;
    recipe_check = false;
    recipe_exists = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Instance destory
if (global.hud_state != "forge")
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check recipe
if (recipe_check == true)
{
    scr_forge_recipes();
    var item_id_1, item_id_2, item_id_3, recipe_id;
    recipe_id = string("000");
    if (global.forg_slot_1 == true)
    {
        item_id_1 = obj_forg_slot_1.item_id;
    }
    else
    {
        item_id_1 = 0;
    }
    if (global.forg_slot_2 == true)
    {
        item_id_2 = obj_forg_slot_2.item_id;
    }
    else
    {
        item_id_2 = 0;
    }
    if (global.forg_slot_3 == true)
    {
        item_id_3 = obj_forg_slot_3.item_id;
    }
    else
    {
        item_id_3 = 0;
    }
    recipe_id = string(string(item_id_1) + string(item_id_2) + string(item_id_3));
    var arrayLength = array_length_1d(Recipe);
    if (real(recipe_id) &lt;= arrayLength)
    {
        if (Recipe[recipe_id])
        {
            recipe_exists = true;
            sprite_index = Recipe[recipe_id];
        }
        else
        {
            recipe_exists = false;
            visible = false;
            sprite_index = spr_grass;
        }
    }
    else
    {
        recipe_exists = false;
        visible = false;
        sprite_index = spr_grass;
    }
    recipe_check = false; //Stop checking 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (recipe_exists == true)
{
    //Change material count in inventory
    //var item1_amount, item2_amount, item3_amount; ???
    if (global.forg_slot_1 == true)
    {
        item_id = obj_forg_slot_1.item_id; //Id
        type_id = 1; //Type
        added_amount = -1; //Added amount
        scr_save_to_inventory();
    }
    if (global.forg_slot_2 == true)
    {
        item_id = obj_forg_slot_2.item_id; //Id
        type_id = 1; //Type
        added_amount = -1; //Added amount
        scr_save_to_inventory();
    }
    if (global.forg_slot_3 == true)
    {
        item_id = obj_forg_slot_3.item_id; //Id
        type_id = 1; //Type
        added_amount = -1; //Added amount
        scr_save_to_inventory();
    }
    //Add crafted material
    //Save to inventory info
    item_id = Id[sprite_index]; //Id
    type_id = 1; //Type
    added_amount = 1; //Added amount
    scr_save_to_inventory();
    
    item_id = 0; //Default info text
    recipe_exists = false; //Reset recipe state
    recipe_check = true; //Check if recipe is still exists

    //Update forge listing
    global.forg_slot_1 = false;
    global.forg_slot_2 = false;
    global.forg_slot_3 = false;
    sprite_index = spr_grass; //Reset info text
    obj_forge_controller.pageUpdate = true;
    obj_forge_controller.current_page = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
