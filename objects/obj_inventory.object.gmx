<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_inventory</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5002</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Inventory
global.inventory = 0;
loop_stop = false;
global.n1 = 0;
global.n2 = 0;
global.inventory_page = 0;
global.inventory_page_max = 0;

//Coins
global.coins = 0;

//Item counter
global.page_update = true;
global.potions = 0;
global.ironore = 0;
global.logs = 0;

//Ingredients
global.flower_1 = 0;
global.flower_2 = 0;

//Skills
global.auto_healing = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Coin
if (global.coins &lt; 0)
{
    global.coins = 0;
}

//Auto-healing
if (global.auto_healing == 1
    and global.potions &gt; 0
    and global.player_health &lt; 5)
{
    global.potions -= 1;
    global.player_health += 10;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Open inventory
if (keyboard_check_released(vk_tab) and
    global.inventory == 0 and global.dialog == false and
    global.shop == false)
{
    global.inventory = 1;
}
else if (keyboard_check_released(vk_tab) and
         global.inventory &gt; 0 and global.dialog == false)
{
    global.inventory = 0;
    loop_stop = false;
    global.item_count = 0;
    scr_savegame();
}

//Forced close inventory
if (room == Menu or room == First_loading)
{
    global.inventory = 0;
    global.item_count = 0;
    loop_stop = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Inventory page
if (global.inventory == 1 and keyboard_check_released(vk_right) and
    (global.item_count - ((global.inventory_page+1)*8)) &gt; 0)
{
    global.inventory_page += 1;
    global.page_update = true;
}
else if (global.inventory == 1 and keyboard_check_released(vk_left)
         and global.inventory_page &gt; 0)
{
    global.inventory_page -= 1;
    global.page_update = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!room == Menu)
{    
    //Font
    draw_set_font(fnt_item_counter);
    draw_set_color(c_white);
    
    //Coins
    var coin;
    coin = global.coins;
    draw_text_color(view_xview+440,view_yview+278, string(coin),
                c_black, c_black, c_black, c_black, 1);
    //Logo
    draw_sprite_ext(spr_money_draw, image_index, view_xview+425, 
                    view_yview+285, image_xscale, image_yscale, 
                    image_angle, c_white, image_alpha);
    
    //Flower_1
    draw_text_color(view_xview+250,view_yview+278, string(global.flower_1),
                c_black, c_black, c_black, c_black, 1);
    //Flower_2
    draw_text_color(view_xview+240,view_yview+278, string(global.flower_2),
                c_black, c_black, c_black, c_black, 1);
                
    //Logo
    draw_sprite_ext(spr_potion, image_index, view_xview+372, 
                    view_yview+285, image_xscale, image_yscale, 
                    image_angle, c_white, image_alpha);
    
    //Potion
    var potion;
    potion = global.potions;
    draw_text_color(view_xview+380,view_yview+278, string(potion),
                c_black, c_black, c_black, c_black, 1);
    
    //Inventory
    if (global.inventory == 1)
    {
        scr_savegame();
        if (loop_stop == false)
        {
            global.item_amount[global.n2] = 0;
            global.item_amount[global.n1] = 0;
            global.item_sprite[global.n2] = 0;
            global.item_sprite[global.n1] = 0;
            global.n1 = 0;
            global.n2 = 0;
            repeat(14) //Number of items (+1) in Inventory.sav
            //for (i = 0; i &lt; global.item_count; i++;)
            {
                //Item amount
                ini_open("Inventory.sav");
                global.ItemAmount = ini_read_real("Save1",string(global.n1),"0");
                ini_close();
                
                //Item index
                ini_open("ItemsIndex.sav");
                global.SpriteIndex = ini_read_string("ItemIndex",string(global.n1),"spr_aim");
                ini_close();
                
                if (not round(real(global.ItemAmount)) == 0)
                {                   
                    global.item_amount[global.n1] = round(global.ItemAmount);
                    global.item_sprite[global.n1] = global.SpriteIndex;
                    global.item_amount[global.n2] = global.item_amount[global.n1];
                    global.item_sprite[global.n2] = global.item_sprite[global.n1];
                    global.n2 += 1;
                }
                //else
                //{
                //    i -= 1;
                //}
                global.n1 += 1;
            }
            global.item_count = global.n2; 
        } 
        loop_stop = true;
        var y1;
        y1 = 110;
        if (global.item_count &gt; 0)
        {
            if (global.page_update == true)
            {
                global.start_count = 0; //First item number
                global.end_count = 8; //Limit of list
                global.start_count = 0; //First item number
                if (global.item_count &gt; 8)
                {
                    if ((global.item_count - ((global.inventory_page+1)*8)) &gt; 0 and global.inventory_page == 0)
                    {
                        global.start_count = 0;
                        global.end_count = 8;
                        
                    }
                    else if ((global.item_count - ((global.inventory_page+1)*8)) &gt; 0 and
                            global.inventory_page &gt; 0)
                    {
                        global.start_count = (global.inventory_page*8);
                        global.end_count = ((global.inventory_page*8)*2);
                    }
                    else /*if (global.inventory_page &gt; 0)*/
                    {
                        global.start_count = (global.inventory_page*8);
                        global.end_count = global.item_count;
                    }
                }
                global.page_update = false;
            }
            for (global.n2 = global.start_count; global.n2 != global.end_count; global.n2++;)
            {
                //Item background
                draw_sprite(spr_inv_item_bg, 0,view_xview+30, view_yview+7+y1);
                //Item icons
                draw_sprite(asset_get_index(global.item_sprite[global.n2]), 0,view_xview+30, view_yview+7+y1);                
                //Item amount background
                draw_sprite(spr_inv_item_amount_bg, 0,view_xview+110, view_yview+7+y1);
                //Item amount
                draw_text_color(view_xview+55,view_yview+y1, string(global.item_amount[global.n2]),
                                c_black, c_black, c_black, c_black, 1);
                y1 += 19;
            }
            //Page number background
            draw_sprite(spr_inv_item_amount_bg, 0,view_xview+79, view_yview+95);
            //Page number
            global.inventory_page_max = (round(global.item_count/8));
            draw_text_color(view_xview+20,view_yview+87, 
                            string("PAGE: " + string(global.inventory_page + 1) + "       / " + string(global.inventory_page_max)),
                            c_black, c_black, c_black, c_black, 1);
        }    
    }
    else if(global.inventory == 2)
    {
        //Text
        draw_sprite(spr_death_counter, 0, view_xview+30, view_yview+120);
        //Deat counter
        var death_counter;
        death_counter = global.death_counter;
        draw_text_color(view_xview+50,view_yview+112, string(death_counter),
                c_black, c_black, c_black, c_black, 1);
        
        //Text
        draw_sprite(spr_kill_counter, 0, view_xview+30, view_yview+150);
        //Kill counter
        draw_text_color(view_xview+50,view_yview+143, string(global.kill_counter),
                c_black, c_black, c_black, c_black, 1);
    }
    /*else if(global.inventory == 3)
    {
        //Text
        draw_sprite(spr_st_infobox , 0, view_xview+30, view_yview+120);
        //Deat counter
        draw_text_color(view_xview+50,view_yview+112, string(global.death_counter),
                c_black, c_black, c_black, c_black, 1);
    }*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.potions &gt; 0 and global.player_health &lt; 20)
{
    global.potions -= 1;
    global.player_health += 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
