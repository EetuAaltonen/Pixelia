<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_inventory</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5002</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Inventory
//Read saved ini
key = "";
ref = 1;
search_id = "";

//Coins
global.coins = 0;
//Potion
global.potions = 0;

//Skills
global.auto_healing = 1;

//Max item weight
global.max_item_weight = 100;

//Collected item info text
t = 1;
draw_info_text = false;
info_text[t] = "";
text_y_pos = 0;
info_text_alpha = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Collected item info text
if (draw_info_text == true)
{
    if (text_y_pos == 0)
    {
        if not(info_text[t] == "")
        {
            draw_info_text = true;
            text_y_pos -= 1;
            alarm[1] = 2;
        }
        else
        {
            draw_info_text = false;
            t = 1;
        }
    }
    else
    {
        if not(text_y_pos == -40)
        {
            text_y_pos -= 1;
            alarm[1] = 2;
            if (text_y_pos &gt; -29 and info_text_alpha &lt; 1)
            {
                info_text_alpha += 0.10;   
            }
            else if (text_y_pos &lt; -29)
            {
                info_text_alpha -= 0.10;
            }
        }
        else
        {
            text_y_pos = 0;
            info_text_alpha = 0;
            info_text[t] = "";
            if (t + 1 &lt; array_length_1d(info_text))
            {
                t += 1;
            }
            else
            {
                if not(info_text[1] == "")
                {
                    t = 1;
                    draw_info_text = true;
                }
            }
            alarm[1] = 2;
        }
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Coin
if (global.coins &lt; 0)
{
    global.coins = 0;
}

//Auto-healing
if (global.auto_healing == 1
    and global.potions &gt; 0
    and global.player_health &lt; 5)
{
    global.potions -= 1;
    global.player_health += 10;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Open inventory
if (keyboard_check_released(vk_tab))
{
    if (!string_pos("inventory", string(global.hud_state)))
    {
        global.hud_state = "inventory1";
        page_refresh = true;
        loop_stop = false;
        inventory_page = 0;
        
        //Create buttons
        instance_create(view_xview+4, view_yview+54, obj_inv_inventory_button);
        instance_create(view_xview+119, view_yview+54, obj_inv_skilltree_button);
        instance_create(view_xview+234, view_yview+54, obj_inv_stats_button);
        instance_create(view_xview+349, view_yview+54, obj_inv_save_exit_button);
        instance_create(view_xview+464, view_yview+54, obj_inv_close_button);
    }
    else if (string_pos("inventory", string(global.hud_state)))
    {    
        global.hud_state = "null";
        scr_savegame();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Inventory page
if (global.hud_state == "inventory1" and keyboard_check_released(vk_right) and
    (item_count - ((inventory_page+1)*8)) &gt; 0)
{
    inventory_page += 1;
    page_update = true;
}
else if (global.hud_state == "inventory1" and keyboard_check_released(vk_left)
         and inventory_page &gt; 0)
{
    inventory_page -= 1;
    page_update = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Inventory
//Font
draw_set_font(fnt_inventory_text);
draw_set_color(c_black);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);

if (global.hud_state == "inventory1")
{
    if (loop_stop == false)
    {
        
        //Better code
        item_count = 0;
        search_id = "mater";
        i = 0;
        
        //Weight
        global.total_item_weight = 0;
        
        ini_open("Inventory.sav");
        for(item_id = 1; item_id &lt; 100; item_id++)
        {
            //Change category
            if (search_id == "mater" and item_id == 20) //This is first category of ordering
            {
                search_id = "ingr";
                item_id = 1;
            }
            else if(search_id == "ingr" and item_id == 20)
            {
                search_id = "poti";
                item_id = 1;
            }
            else if(search_id == "poti" and item_id == 20)
            {
                search_id = "food";
                item_id = 1;
            }
            else if(search_id == "food" and item_id == 20)
            {
                break;
            }
            key = search_id + "[" + string(item_id) + "]";
            //Check reference key (XXX[ref,item_id)
            switch (search_id)
            {
                case "mater": ref = 1; break;
                case "ingr": ref = 2; break;
                case "poti": ref = 3; break;
                case "food": ref = 4; break;
            }
            //Item amount
            item_amount[ref,item_id] = ini_read_real("Save1", key, -1);
            
            //Check if item amount &gt; 0
            if (round(item_amount[ref,item_id]) &gt; 0)
            {
                //Item icon
                scr_inventory_item_info();
                item_icon[ref,item_id] = string(Icon[ref,item_id]);
                
                //Item description
                item_description[ref,item_id] = string(Descr[ref,item_id]);
                
                //Item amount is top of for loop
                
                //Item weight
                item_weight[ref,item_id] = string(Weight[ref,item_id]);
                
                //Draw
                item_icon_draw[i] = item_icon[ref,item_id];
                item_description_draw[i] = item_description[ref,item_id];
                item_amount_draw[i] = item_amount[ref,item_id];
                item_weight_draw[i] = item_weight[ref,item_id];
                
                //Weight
                global.total_item_weight += real(item_weight_draw[i]);
                
                item_count += 1;
                i += 1;
            }
        }
        ini_close();
        loop_stop = true;
    }
    var y_pos; //y position
    y_pos = 120;
    if (item_count &gt; 0)
    {
        if (page_refresh == true)
        {
            size_of_list = 8; //Limit of list
            start_count = 0; //First item
            if (item_count &gt; 8)
            {                       //This have to be set!
                if ((item_count - ((inventory_page+1)*8)) &gt; 0 and inventory_page == 0)
                {
                    start_count = 0;
                    end_count = 8;
                    
                }
                else if ((item_count - ((inventory_page+1)*8)) &gt; 0 and
                        inventory_page &gt; 0)
                {
                    start_count = (inventory_page*8);
                    end_count = ((inventory_page*8)*2);
                }
                else
                {
                    start_count = (inventory_page*8);
                    end_count = item_count;
                }
            }
            else
            {
                end_count = item_count;
                start_count = 0;
            }
            page_update = false;
        }
        for (i = start_count; i != end_count; i++;)
        {
            if (string_pos("spr_", string(item_icon_draw[i])))
            {                
                //Item background
                draw_sprite(spr_inv_item_bg, 0,view_xview+30, view_yview+y_pos);
                //Item icons
                draw_sprite(asset_get_index(string(item_icon_draw[i])), 0,view_xview+30, view_yview+y_pos);           
                //Item description background
                draw_sprite(spr_inv_item_description_bg, 0,view_xview+120, view_yview+y_pos);
                //Item description
                draw_text(view_xview+56,view_yview+y_pos, string(item_description_draw[i]));
                //Item amount background
                draw_sprite(spr_inv_item_amount_bg, 0,view_xview+228, view_yview+y_pos);
                //Item amount
                draw_text(view_xview+207,view_yview+y_pos, string(item_amount_draw[i]));
                //Item weight background
                draw_sprite(spr_inv_item_amount_bg, 0,view_xview+295, view_yview+y_pos);
                //Item weight
                draw_text(view_xview+274,view_yview+y_pos, string(item_weight_draw[i]) + "  Kg");
                
                y_pos += 19;
            }
            else
            {
                i -= 1;
            }
        }
        //Item count
        draw_text(view_xview+300,view_yview+95, string(item_count));
        //Page number background
        draw_sprite(spr_inv_item_description_bg, 0,view_xview+87, view_yview+95);
        //Page number max
        inventory_page_max = (round(item_count/8));
        if ((inventory_page_max - (item_count/8)) &lt; 0 )
        {   
            inventory_page_max += 1;
        }
        //Draw page number and max
        draw_text(view_xview+22,view_yview+95, string("PAGE:    " + string(inventory_page + 1) + "  /  " + string(inventory_page_max)));
        
        //Total and weight background
        draw_sprite(spr_inv_item_description_bg, 0,view_xview+255, view_yview+95);
        //Total and weight
        draw_text(view_xview+190,view_yview+95, "Weight:  " + string(global.total_item_weight) + "  /  " + string(global.max_item_weight) + "  Kg");
    }
    else
    {
        //If empty
        draw_text(view_xview+30, view_yview+120, "Inventory is empty...");
    }
}
else if (global.hud_state == "inventory2")
{
    //Skilltree
    draw_text(view_xview+30, view_yview+120, string(global.skillpoints));
}
else if(global.hud_state == "inventory3")
{
    //Icon
    draw_sprite(spr_death_counter, 0, view_xview+30, view_yview+120);
    //Death counter
    draw_text(view_xview+50,view_yview+112, string(global.death_counter));
    
    //Icon
    draw_sprite(spr_kill_counter, 0, view_xview+30, view_yview+150);
    //Kill counter
    draw_text(view_xview+50,view_yview+143, string(global.kill_counter));
    
    //Home village stats
    //Icon
    draw_sprite(spr_home_happiness, 0, view_xview+230, view_yview+120);
    //Happiness
    draw_text(view_xview+250,view_yview+112, string(global.home_happiness));
            
    //Icon
    draw_sprite(spr_home_defence, 0, view_xview+230, view_yview+150);
    //Defence
    draw_text(view_xview+250,view_yview+143, string(global.home_defence));
    
    //Icon
    draw_sprite(spr_home_hunger, 0, view_xview+230, view_yview+180);
    //Hunger
    draw_text(view_xview+250,view_yview+174, string(global.home_hunger));
    
    //Icon
    draw_sprite(spr_home_thirst, 0, view_xview+230, view_yview+210);
    //Thirst
    draw_text(view_xview+250,view_yview+205, string(global.home_thirst));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Font
draw_set_font(fnt_hotbar_text);
draw_set_color(c_black);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);

//Level
draw_text(view_xview+180,view_yview+286, "Level    " + string(global.level));
//XP
draw_text(view_xview+270,view_yview+286, "XP    " + string(global.xp) + "  /  " + string(global.xp_limit));

//Coins
draw_text(view_xview+443,view_yview+286, string(global.coins));
//Coin logo
draw_sprite_ext(spr_money_icon, image_index, view_xview+425, 
                view_yview+286, image_xscale, image_yscale, 
                image_angle, c_white, image_alpha);                
//Potions
draw_text(view_xview+384,view_yview+286, string(global.potions));
                
//Potion logo
draw_sprite_ext(spr_potion_icon, image_index, view_xview+372, 
                view_yview+286, image_xscale, image_yscale, 
                image_angle, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Font
draw_set_font(fnt_collected_item_info_text);
draw_set_color(c_black);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);

if (draw_info_text == true)
{
    if (global.hud_state == "null")
    {
        draw_text_colour(view_xview+450, view_yview+260+text_y_pos, string(info_text[t]),
                         c_black, c_black, c_black, c_black, info_text_alpha);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.potions &gt; 0 and global.player_health &lt; 20)
{
    global.potions -= 1;
    global.player_health += 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
